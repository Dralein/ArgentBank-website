swagger: '2.0'
info:
  title: Bank Argent API Documentation
  description: API documentation for all available endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: User Login
      description: API for user login
      parameters:
        - in: body
          name: body
          description: Login payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login successful
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error

  /user/signup:
    post:
      tags:
        - User Module
      summary: User Signup
      description: API for user signup
      parameters:
        - in: body
          name: body
          description: Signup payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup successful
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Fetch User Profile
      description: API for fetching user profile
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update User Profile
      description: API for updating user profile
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error
  
  /accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: List of accounts
      description: API to list account for a specific user
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            $ref: '#/definitions/TransactionsResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /category:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: List of category
      description: API to list category
      produces:
        - application/json
      responses:
        '200':
          description: Categories retrieved successfully
          schema:
            items:
              $ref: '#/definitions/TransactionCategory'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  
  
    
  /accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: List Transactions
      description: API to list transactions for a specific user and account
      parameters:
        - in: path
          name: accountId
          type: string
          description: Account ID
          required: true
        - in: query
          name: month
          type: string
          description: Selected month
          required: false
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            $ref: '#/definitions/TransactionsResponse'
        '401':
          description: Unauthorized
        '404':
          description: Invalid account ID
        '500':
          description: Internal server error

  /accounts/{accountId}/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get Transaction by ID
      description: API to get a specific transaction
      parameters:
        - in: path
          name: accountId
          type: string
          description: Account ID
          required: true
        - in: path
          name: transactionId
          type: string
          description: Transaction ID
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Transaction retrieved successfully
          schema:
            $ref: '#/definitions/Transaction'
        '401':
          description: Unauthorized
        '404':
          description: Invalid account ID, or transaction ID
        '500':
          description: Internal server error

    patch:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Modify Transaction
      description: API to modify a transaction's note or category. If set to an empty string, it can be considered as deleted.
      parameters:
        - in: path
          name: accountId
          type: string
          description: Account ID
          required: true
        - in: path
          name: transactionId
          type: string
          description: Transaction ID
          required: true
        - in: body
          name: body
          description: Transaction note or category payload
          required: true
          schema:
            $ref: '#/definitions/TransactionNoteOrCategory'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction modified successfully
          schema:
            $ref: '#/definitions/Transaction'
        '401':
          description: Unauthorized
        '404':
          description: Invalid account ID, or transaction ID
        '500':
          description: Internal server error


securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    type: object
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
      firstName:
        type: string
        description: User first name
      lastName:
        type: string
        description: User last name

  Login:
    type: object
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string

  TransactionsResponse:
            type: array
            description: Array of transactions
            items:
              $ref: '#/definitions/Transaction'

  Transaction:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
        pattern: 'yyyy-MM-dd'
      amount:
        type: number
      balance:
        type: number
      description:
        type: string
      transactionType:
        type: string
      category:
        type: string
      notes:
        type: string

  TransactionNoteOrCategory:
    type: object
    properties:
      category:
        type: string
      notes:
        type: string

  TransactionCategory:
    type: string
    enum:
      - Food
      - Shopping
      - Entertainment
      - Health
      - Transportation
      - Other