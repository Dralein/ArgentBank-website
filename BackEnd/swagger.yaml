swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '2.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get Transactions
      description: API to fetch all transactions for the current user
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            $ref: '#/definitions/TransactionList'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    post:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Add Transaction
      description: API to add a new transaction for the current user
      parameters:
        - in: body
          name: body
          description: Transaction Payload
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      produces:
        - application/json
      responses:
        '201':
          description: Transaction added successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /transactions/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get Transaction by ID
      description: API to fetch a transaction by its ID
      parameters:
        - in: path
          name: id
          description: ID of the transaction to fetch
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction retrieved successfully
          schema:
            $ref: '#/definitions/Transaction'
        '404':
          description: Transaction not found
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update Transaction
      description: API to update a transaction by its ID
      parameters:
        - in: path
          name: id
          description: ID of the transaction to update
          required: true
          type: string
        - in: body
          name: body
          description: Updated Transaction Payload
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
        '404':
          description: Transaction not found
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Delete Transaction
      description: API to delete a transaction by its ID
      parameters:
        - in: path
          name: id
          description: ID of the transaction to delete
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Transaction deleted successfully
        '404':
          description: Transaction not found
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /transactions/{id}/category:
    patch:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Modify transaction category
      description: API for updating the category of a specific transaction
      parameters:
        - in: path
          name: id
          description: ID of the transaction to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Transaction category update payload
          required: true
          schema:
            type: object
            properties:
              category:
                type: string
                description: New transaction category
                enum:
                  - Food
                  - Shopping
                  - Travel
                  - Entertainment
                  - Utilities
                  - Others
      produces:
        - application/json
      responses:
        '200':
          description: Transaction category successfully updated
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
  /transactions/{id}/note:
    patch:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Adding a note to a transaction
      description: API for adding a note to a specific transaction
      parameters:
        - in: path
          name: id
          description: ID of the transaction to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Payload for adding a note to the transaction
          required: true
          schema:
            $ref: '#/definitions/TransactionNote'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction deleted successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Transaction:
    type: object
    properties:
      amount:
        type: number
        description: Transaction amount
      category:
        $ref: '#/definitions/TransactionCategory'
      note:
        type: string
        description: Transaction note
  TransactionList:
    type: array
    items:
      $ref: '#/definitions/Transaction'    
  TransactionCategory:
    type: string
    enum:
      - Food
      - Shopping
      - Entertainment
      - Health
      - Transportation
      - Other
  TransactionNote:
    type: object
    properties:
      note:
        type: string
        description: New note to add to the transaction


